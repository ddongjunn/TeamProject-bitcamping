<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.camping.bit.dao.RentDao">

	<insert id="regiAf" parameterType="ProductDetailDto">
  		INSERT INTO PRODUCT 
  		(PRODUCT_SEQ, PRODUCT_NAME, PRODUCT_DESC, BASE_ITEM, PRODUCT_PRICE, PRODUCT_STOCK, THUMBNAIL_NAME, 
  		CONTENT, INCLUDE_LIGHT, INCLUDE_GRILL, RENT_TYPE, WDATE, DEL)
  		VALUES(PRODUCT_SEQ.NEXTVAL, #{product_Name}, #{product_Desc}, #{base_Item}, #{product_Price}, #{product_Stock}, #{thumbnail_Name},
  		#{content}, #{include_Light}, #{include_Grill}, #{rent_Type}, SYSDATE, 0)
	</insert>
	
	<select id="getProductList" parameterType="CommonsParam" resultType="ProductDetailDto">
		SELECT PRODUCT_SEQ, PRODUCT_NAME, PRODUCT_DESC, BASE_ITEM, PRODUCT_PRICE, PRODUCT_STOCK, THUMBNAIL_NAME, 
  		CONTENT, INCLUDE_LIGHT, INCLUDE_GRILL, RENT_TYPE, WDATE, DEL, (SELECT NVL(AVG(RATE), 0) FROM PRODUCT_REVIEW WHERE PRODUCT_SEQ = P.PRODUCT_SEQ) AS RATE
  		FROM (
  			SELECT ROW_NUMBER()OVER(ORDER BY WDATE DESC) AS RNUM,
				PRODUCT_SEQ, PRODUCT_NAME, PRODUCT_DESC, BASE_ITEM, PRODUCT_PRICE, PRODUCT_STOCK, THUMBNAIL_NAME, 
  				CONTENT, INCLUDE_LIGHT, INCLUDE_GRILL, RENT_TYPE, WDATE, DEL
			FROM PRODUCT
			WHERE DEL = 0
  			) P
  		WHERE RNUM BETWEEN #{start} AND #{end}
		ORDER BY WDATE DESC
	</select>
	
	<select id="getProductCount" parameterType="CommonsParam" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE DEL = 0
	</select>
	
	<select id="getProductDetail" parameterType="java.lang.Integer" resultType="ProductDetailDto">
		SELECT *
  		FROM PRODUCT
  		WHERE PRODUCT_SEQ = #{product_Seq}
	</select>
	
	<select id="getRentList" parameterType="java.lang.Integer" resultType="ProductRentDto">
		SELECT *
  		FROM PRODUCT_RENT
  		WHERE RENT_TYPE = (SELECT RENT_TYPE FROM PRODUCT WHERE PRODUCT_SEQ = #{product_Seq})
	</select>
	
	<select id="getRentDetail" parameterType="java.lang.Integer" resultType="ProductRentDto">
		SELECT * FROM PRODUCT_RENT
		WHERE RENT_SEQ = #{rent_Seq}
	</select>
	
	<select id="getOptionList" resultType="ProductOptionDto">
		SELECT * FROM PRODUCT_OPTION
	</select>
	
	<select id="getOptionDetail" parameterType="java.lang.Integer" resultType="ProductOptionDto">
		SELECT * FROM PRODUCT_OPTION
		WHERE OPTION_SEQ = #{option_Seq}
	</select>
	
	<insert id="writeReviewAf" parameterType="ProductReviewDto">
  		INSERT INTO PRODUCT_REVIEW 
  		(REVIEW_SEQ, PRODUCT_SEQ, USER_ID, ORDER_SEQ, TITLE, CONTENT, IMAGE, RATE, WDATE, DEL, STATUS)
  		VALUES(PRODUCT_REVIEW_SEQ.NEXTVAL, (SELECT PRODUCT_SEQ FROM PRODUCT_ORDER WHERE ORDER_SEQ=#{order_Seq}), #{user_Id}, #{order_Seq}, 
  		#{title}, #{content}, #{image, jdbcType=VARCHAR}, #{rate}, SYSDATE, 0, 0)
	</insert>
	
	<select id="getReviewList" parameterType="java.lang.Integer" resultType="ProductReviewDto">
  		SELECT REVIEW_SEQ, PRODUCT_SEQ, USER_ID, (SELECT NICKNAME FROM MEMBER WHERE ID = USER_ID) AS NICKNAME, ORDER_SEQ, TITLE, CONTENT, IMAGE, RATE, WDATE, DEL, STATUS 
		FROM PRODUCT_REVIEW
		WHERE 1=1 
			AND DEL = 0 
			AND PRODUCT_SEQ = #{product_Seq}
		ORDER BY WDATE
	</select>
	
	<select id="getReviewCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM PRODUCT_REVIEW
		WHERE 1=1 
		AND DEL != 1 
		AND PRODUCT_SEQ = #{product_Seq}
	</select>
	
	<insert id="writeQnaAf" parameterType="ProductQnaDto">
		INSERT INTO PRODUCT_QNA
		(QNA_SEQ, PRODUCT_SEQ, USER_ID, TITLE, CONTENT, WDATE, SECRET, DEL, STATUS)
		VALUES(PRODUCT_QNA_SEQ.NEXTVAL, #{product_Seq}, #{user_Id}, #{title}, #{content}, SYSDATE, #{secret}, 0, 0)
	</insert>
	
	<select id="getQnaList" parameterType="java.lang.Integer" resultType="ProductQnaDto">
		SELECT QNA_SEQ, PRODUCT_SEQ, USER_ID, (SELECT NICKNAME FROM MEMBER WHERE ID = USER_ID) AS NICKNAME, TITLE, CONTENT, WDATE, SECRET, DEL, STATUS
		FROM PRODUCT_QNA
		WHERE PRODUCT_SEQ = #{product_Seq}
			AND DEL = 0
		ORDER BY WDATE
	</select>
	
	<select id="getQnaCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM PRODUCT_QNA
		WHERE 1=1 
		AND DEL != 1 
		AND PRODUCT_SEQ = #{product_Seq}
	</select>
	
	<select id="getRateAvg" parameterType="java.lang.Integer">
		SELECT AVG(RATE) 
		FROM PRODUCT_REVIEW
		WHERE PRODUCT_SEQ = #{product_Seq}
	</select>
	
	<insert id="paymentAf" parameterType="ProductOrderDto">
		INSERT INTO PRODUCT_ORDER (ORDER_SEQ, USER_ID, ORDER_DATE, PRODUCT_SEQ, OPTION1_SEQ, OPTION2_SEQ, QUANTITY, 
			RENT_SEQ, RENT_SDATE, RENT_EDATE, PRODUCT_PRICE, SHIPPING_FEE, TOTAL_PRICE, 
			RECEIVER, ADDRESS, RECEIVER_PHONE, MEMO, PAYMENT, MERCHANT_UID, ORDER_STATUS, REVIEW_STATUS) 
		VALUES (PRODUCT_ORDER_SEQ.NEXTVAL, #{user_Id}, SYSDATE, #{product_Seq}, #{option1_Seq}, #{option2_Seq}, #{quantity}, 
			#{rent_Seq}, #{rent_Sdate}, #{rent_Edate}, #{product_Price}, #{shipping_Fee}, #{total_Price}, 
			#{receiver}, #{address}, #{receiver_Phone}, #{memo}, #{payment}, #{merchant_Uid}, 1, 0)
	</insert>
	
	<select id="getOrderInfo" parameterType="String" resultType="ProductOrderDto">
		SELECT * FROM PRODUCT_ORDER
		WHERE MERCHANT_UID = #{merchant_Uid}
	</select>
	
	<update id="reviewStatus" parameterType="java.lang.Integer">
		UPDATE PRODUCT_ORDER
		SET REVIEW_STATUS = 1
		WHERE ORDER_SEQ = #{order_Seq}
	</update>
	
	<update id="productUpdateAf" parameterType="ProductDetailDto">
		UPDATE PRODUCT
		SET PRODUCT_NAME = #{product_Name}, 
			PRODUCT_DESC = #{product_Desc}, 
			BASE_ITEM = #{base_Item}, 
			PRODUCT_PRICE = #{product_Price}, 
			PRODUCT_STOCK = #{product_Stock}, 
			THUMBNAIL_NAME = #{thumbnail_Name}, 
  			CONTENT = #{content}, 
  			INCLUDE_LIGHT = #{include_Light}, 
  			INCLUDE_GRILL = #{include_Grill}, 
  			RENT_TYPE = #{rent_Type}
  		WHERE PRODUCT_SEQ = #{product_Seq}
	</update>
	
	<update id="productDelete" parameterType="ProductDetailDto">
		UPDATE PRODUCT
		SET DEL = 1
  		WHERE PRODUCT_SEQ = #{product_Seq}
	</update>
	
	<update id="reduceStock" parameterType="ProductOrderDto">
		UPDATE PRODUCT
		SET PRODUCT_STOCK = PRODUCT_STOCK - #{quantity}
		WHERE PRODUCT_SEQ = #{product_Seq}
	</update>

</mapper>